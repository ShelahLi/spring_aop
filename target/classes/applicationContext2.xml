<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--配置目标类=========-->
    <bean id="customerDao" class="com.lucky.demo4.CustomerDao"/>
    <!--前置通知类型=======-->
    <bean id="myAroundAdvice" class="com.lucky.demo4.MyAroundAdvice"></bean>
    <!--一般的切面使用通知作为切面，对所有方法都进行增强；现在我们只对目标类的某些方法进行增强，需要配置带有切入点的切面-->
    <bean id="myAdvice" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <!--pattern中配置正则表达式: .* 表示对所有方法进行增强-->
        <property name="patterns" value=".*save.*,.*delete.*"/><!--patterns:对save和delete方法都进行增强-->
        <!--<property name="pattern" value=".*save.*"/>--><!--pattern:只对save方法进行增强-->
        <property name="advice" ref="myAroundAdvice"/>
    </bean>
    <!--spring的AOP产生代理对象-->
    <bean id="customerDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!--配置目标类-->
        <property name="target" ref="customerDao"/>
        <!--目标类没有实现接口-->
        <property name="proxyTargetClass" value="true"/>
        <!--采用拦截的名称-->
        <property name="interceptorNames" value="myAdvice"/>
    </bean>
</beans>